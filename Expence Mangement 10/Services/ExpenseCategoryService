using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Expence_Management_10.Data;
using Expence_Management_10.Models;
using System.Linq;




namespace Expence_Management_10.Services
{
    public interface ICategoryService
    {
        Task<List<Category>> GetCategories();
        Task<Category> GetCategoryById(int id);
        Task<Category> CreateCategory(Category category);
        Task<Category> UpdateCategory(int id, Category category);
        Task<bool> DeleteCategory(int id);
    }


    public class CategoryService : ICategoryService
    {
        private readonly ExpenseDbContext _context;

        public CategoryService(ExpenseDbContext context)
        {
            _context = context;
        }




        // Implementation of CRUD methods for categories...




        private readonly ExpenseDbContext _dbContext;

        public ExpenseCategoryService(ExpenseDbContext dbContext)
        {
            _dbContext = dbContext;
        }

        public IEnumerable<ExpenseCategory> GetExpenseCategories()
        {
            return _dbContext.ExpenseCategories.ToList();
        }

        public ExpenseCategory GetExpenseCategory(int categoryId)
        {
            return _dbContext.ExpenseCategories.Find(categoryId);
        }

        public void AddExpenseCategory(ExpenseCategory category)
        {
            _dbContext.ExpenseCategories.Add(category);
            _dbContext.SaveChanges();
        }

        public void UpdateExpenseCategory(ExpenseCategory category)
        {
            _dbContext.ExpenseCategories.Update(category);
            _dbContext.SaveChanges();
        }

        public void DeleteExpenseCategory(int categoryId)
        {
            var category = _dbContext.ExpenseCategories.Find(categoryId);
            if (category != null)
            {
                _dbContext.ExpenseCategories.Remove(category);
                _dbContext.SaveChanges();
            }
        }






    }

}